# Generated by Django 3.0 on 2020-03-11 16:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('proveedores', '0010_auto_20200305_1029'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='proveedor',
            options={'managed': True, 'ordering': ['-fecha_modifica'], 'permissions': (('acceso_proveedores', 'Acceso Provisional Proveedores'),)},
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='empresa_tipo',
            field=models.CharField(blank=True, choices=[('Persona Jurídica', 'Persona Jurídica'), ('Persona Natural', 'Persona Natural')], max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='es_proveedor_maquinaria_o_equipo',
            field=models.CharField(blank=True, choices=[('Servicio de mantenimiento de maquinaria y/o equipos', 'Servicio de mantenimiento de maquinaria y/o equipos'), ('Repuestos de maquinaria y/o equipos', 'Repuestos de maquinaria y/o equipos'), ('No', 'No'), ('Maquinaria y/o equipos', 'Maquinaria y/o equipos')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='proveedor_fertilizantes_requisitos_indispensables',
            field=models.CharField(blank=True, choices=[(6, 'Conocer el orígen de las materias primas'), (2, 'Fichas técnicas y hojas de seguridad de los productos empleados'), (5, 'Los ingredientes activos vigentes en las legislaciones de USA, Japón, Europa'), (1, 'Registro de los productos en Agrocalidad o MAGAP'), (4, 'Certificado de que esta libre de noni fenol y cloruro de benzalconio'), (7, 'No soy proveedor de fertilizantes'), (3, 'Análisis de metales pesados')], max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='proveedor_foliares_requisitos_indispensables',
            field=models.CharField(blank=True, choices=[(5, 'No soy proveedor de FOLIARES'), (2, 'Fichas técnicas y hojas de seguridad de los productos empleados'), (1, 'Registro de los productos en Agrocalidad o MAGAP'), (4, 'Conocer el orígen de las materias primas'), (3, 'Análisis producto libre de noni fenol y cloruro de banzalconio con límite de 0.01 ppm de c/compuesto')], max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='proveedor_materia_organica_requisitos_indispensables',
            field=models.CharField(blank=True, choices=[(2, 'Fichas técnicas y hojas de seguridad de los productos empleados'), (3, 'Análisis físico-químico y microbiológico de la M.O. (vigencia 1 año)'), (1, 'Registro de los productos en Agrocalidad o MAGAP'), (5, 'No soy proveedor de MATERIA ORGANICA'), (4, 'Conocer el orígen de las materias primas')], max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='proveedor_pesticidas_requisitos_indispensables',
            field=models.CharField(blank=True, choices=[(2, 'Fichas técnicas y hojas de seguridad de los productos empleado'), (5, 'No soy proveedor de pesticidas'), (1, 'Registro de los productos en Agrocalidad o Magar'), (4, 'Los ingredientes activos deben estar vigentes en las legislaciones de USA,Japón y Europa'), (3, 'Análisis producto libre de noni fenol y cloruro de banzalconio con límite de 0.01 ppm de c/compuesto')], max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='tiene_certificado_ambiental',
            field=models.CharField(blank=True, choices=[('Adjunto a este formulario', 'Adjunto a este formulario'), ('No lo tengo', 'No lo tengo'), ('No lo requiero', 'No lo requiero'), ('Documento Físico', 'Documento Físico'), ('Por correo electrónico', 'Por correo electrónico')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='proveedor_det',
            name='tipo_instalaciones',
            field=models.CharField(blank=True, choices=[('Propias', 'Propias'), ('Trabaja en residencia', 'Trabaja en residencia'), ('Compartida por varias empresas', 'Compartida por varias empresas')], max_length=50, null=True),
        ),
    ]
